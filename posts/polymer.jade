---
title: "Polymer"
link: "polymer"
date: 0/0/0000
summary: ""
_render: false
---

:markdown
  It's a simple polyfill for creating and using web components. Polymer allows you to use the bleeding edge now, custom elements. It's basically a polyfill allowing you to use custom elements all the way back to IE9!

  Custom elements are nice - yet it seems that some of the components built ruin the purpose. Take this component for example: [core-ajax]( http://www.polymer-project.org/docs/elements/core-elements.html#core-ajax), this element allows you to make an ajax request. Re-read that, core-ajax allows you to make an ajax request with an html element. A bell is already ringing in my head saying that we're combining logic into our structure.

  Don't panic yet, take a look at the example they give us:
  ```
  <core-ajax auto url="http://gdata.youtube.com/feeds/api/videos/"
      params='{"alt":"json", "q":"chrome"}'
      handleAs="json"></core-ajax>

  <template repeat="{{response.feed.entry}}">
    <div>{{title.$t}}</div>
  </template>

  <script>
    document.addEventListener('polymer-ready', function() {
      var ajax = document.querySelector("core-ajax");
      ajax.addEventListener("core-response",
        function(e) {
          document.querySelector('template').model = {
            response: e.detail.response
          };
        }
      );
    });
  </script>
  ```
  We make our core-ajax element define all of it's properties and use template to display the reponses. In the script we have an event listener that waits for everything to be loaded and for the callback to render the responses. This seems really nice, but we just created a whole new element to handle an ajax request. If my point isn't clear enough, we're putting logic into our structure. An ajax request or XMLHttpRequest could of been made in a seperate file and left our html tidy.


  Check this out:
  ```
    () -> # Using jquery
      $.ajax(
        url: 'example.com/foo/bar',
        success: (data) ->
          # use all this new data you gained!
      )
  ```
  Wow, that was hardest 6 lines I've ever wrote. Yes we just completed an ajax request in ~6 lines, which is what we did with polymer in ~18 lines, or a single line (if we minify it).
